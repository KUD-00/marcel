47. Emacs in background doesn't work

- Run emacs
- Ctrl-Z

Goes to background, but bg and fg do not revive it.

Complete "help interaction" when this is working.

As of about June 9, job control works on the console, but emacs never
suspends, and in fact it is no longer owned by the marcel
process. Exiting marcel leaves emacs running.

----------------------------------------------------------------------

48. Syntax error in .marcel.py should be handled more gracefully

jao@cheese:~/git/marcel/test$ marcel
Traceback (most recent call last):
  File "/usr/lib/python3.7/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.7/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 211, in <module>
    MAIN = Main()
  File "/home/jao/git/marcel/marcel/main.py", line 90, in __init__
    self.env = marcel.env.Environment(self.config)
  File "/home/jao/git/marcel/marcel/env.py", line 136, in __init__
    self.read_config(config_file)
  File "/home/jao/git/marcel/marcel/env.py", line 201, in read_config
    exec(config_source, self.namespace, locals)
  File "<string>", line 64
    cat = [ map (f: (f, f.readlines())) | expand 1 ]
                  ^
SyntaxError: invalid syntax

----------------------------------------------------------------------

58. Infinite loop in help

There was a typo in the HELP for ps:

HELP = '''
{L,wrap=F}ps [-u|--user [USER]] [-g|--group [GROUP}] [-p|--pid PID] [-c|--command STRING]

Note that GROUP is followed by } instead of ]. That seemed to put 
help into an infinite loop.
----------------------------------------------------------------------

66. Parsing error due to whitespace

M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | map(x: x+1)
Error: Running map(lambda: f'''map{x: x+1}''') on (0,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (1,): <lambda>() takes 0 positional arguments but 1 was given
Error: Running map(lambda: f'''map{x: x+1}''') on (2,): <lambda>() takes 0 positional arguments but 1 was given

Lexer.consolidate_tokens consolidates map and (...

IS THIS A BUG?

----------------------------------------------------------------------

67. Pipeline syntax needs to be generalized

    M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | map (x: x + 5)
    5
    6
    7
    M-0.9.15 jao@cheese:~/git/marcel$ gen 3 | [x: map (x + 5)]
    Parsing error at position 8 of "...gen 3 | [x: map (x + 5)]...": Unexpected token type: Begin([)

This syntax:

    ... | [ ... ]

is rejected by the parser, which means we can't have pipelines with
parameters as literals. Fix the parser.

----------------------------------------------------------------------

69. Shell crashes on bad first arg to loop

M-0.9.17 jao@cheese:~$ loop (10, 1) [select (x, f: x > 0) | emit | map (x, f: (x-1, f*x))]
Traceback (most recent call last):
  File "/usr/lib/python3.8/runpy.py", line 193, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/usr/lib/python3.8/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/jao/git/marcel/marcel/main.py", line 271, in <module>
    MAIN.run()
  File "/home/jao/git/marcel/marcel/main.py", line 123, in run
    self.run_command(line)
  File "/home/jao/git/marcel/marcel/main.py", line 136, in run_command
    pipeline = parser.parse()
  File "/home/jao/git/marcel/marcel/parser.py", line 704, in parse
    return self.command()
  File "/home/jao/git/marcel/marcel/parser.py", line 710, in command
    return self.pipeline(None)
  File "/home/jao/git/marcel/marcel/parser.py", line 730, in pipeline
    op_sequence = Parser.ensure_sequence(self.op_sequence())
  File "/home/jao/git/marcel/marcel/parser.py", line 740, in op_sequence
    op_args = self.op_args()
  File "/home/jao/git/marcel/marcel/parser.py", line 761, in op_args
    op = self.create_op(op_token, arg_tokens)
  File "/home/jao/git/marcel/marcel/parser.py", line 824, in create_op
    op = self.create_op_builtin(op_token, arg_tokens)
  File "/home/jao/git/marcel/marcel/parser.py", line 852, in create_op_builtin
    args.append(x.value(self) if isinstance(x, Token) else x)
  File "/home/jao/git/marcel/marcel/parser.py", line 298, in value
    self._function = marcel.functionwrapper.FunctionWrapper(function=function,
  File "/home/jao/git/marcel/marcel/functionwrapper.py", line 56, in __init__
    self._globals = self._function.__globals__
AttributeError: 'tuple' object has no attribute '__globals__'

----------------------------------------------------------------------

79. less doesn't work

----------------------------------------------------------------------

85. Any env var can be deleted

Even important ones, like PROMPT. Some of them need to be protected.

----------------------------------------------------------------------

87. Assign pipeline without brackets

Should it be allowed? If not, this failure mode is pretty bad:

    M-0.10.8 jao@cheese:~/git/marcel/marcel/object$ g = gen 5
    M-0.10.8 jao@cheese:~/git/marcel/marcel/object$ (g)
    gen

The string "gen" is assigned and the rest is ignored.

----------------------------------------------------------------------

89. Be able to execute marcel script from inside marcel

Don't require use of host shell.
    
----------------------------------------------------------------------

95. emacs no longer working

Specific to root.

M-0.10.13 root@cheese:/media/backup/daily/2020.08.26# emacs
emacs: Could not open file: /dev/tty
Escaped command failed with exit code 1: emacs
None

----------------------------------------------------------------------

97. ... | args [n: sql 'insert ... values(%s) (n)' does, essentially, autocommit

The problem is that each invocation of the pipeline does sql setup, receive, receive_complete.

----------------------------------------------------------------------

99. Redirection doesn't work for executables

This works, putting a list of Files into x:

    ls > x

This does not work:

    date > x

Error message: Variable date is undefined.

----------------------------------------------------------------------

108. quote_files is failing, but only through the API?!

This fails, in test_api:

    TEST.run(test=lambda: run(ls('/tmp/a', file=True) |
                              args(lambda files: bash(f'mv -t d {quote_files(files)}'), all=True)),
             verification=lambda: run(ls('d', file=True) | map(lambda f: f.name)),
             expected_out=['a file', "a file with a ' mark", 'a_file'])

the quoted files are messed up, mv -t d ... fails. The command passed to bash is:

    mv -t d '/tmp/a/a file' '/tmp/a/a file with a '"'"' mark' /tmp/a/a_file

But somehow the quote marks get escaped, I think. Test is disabled for now.

The equivalent test in test_ops succeeds!?!?!?!

----------------------------------------------------------------------

113. Farcel error reporting is broken

ls /nosuchfile: Generates an error
@jao [ls /nosuchfile]: Error message shows up as output (see test_api test_remote)

Need to review how errors and exceptions are reported from farcel.

----------------------------------------------------------------------

114. Ctrl-C doesn't clean up temp file

- gen 10000000 > x
- ctrl-c while it's running

The env var isn't there, but the temp file is.

----------------------------------------------------------------------

127. API env missing symbols

E.g. USER, HOME.

----------------------------------------------------------------------

128. Tab completion vs. syntactic sugar

For "var > ..." or "./file > ...", tab completion doesn't work. Tab
completion for first symbol expects executable.

----------------------------------------------------------------------

137. Why are there excess tokens?

ls *.{py,txt}
[ls(depth=recursive, include=, filename=?)] followed by excess tokens: Comma(,), String(txt})

{} should be part of the FILENAME

Because comma is parsed.

----------------------------------------------------------------------

144. Use of colon in a bash command is problematic

COLON is a Lexer token.

M 0.11.12 jao@cheese:~$ bash scp ~/.marcel.py jorenstein@nd:/home/jorenstein
[bash(args=None)] followed by excess tokens: Colon(:), String(/home/jorenstein)

----------------------------------------------------------------------

148. psql doesn't work when it needs a password:

    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None
    M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ bash -i psql nasuni < schema.sql
    Password for user jao: 
    psql: error: FATAL:  password authentication failed for user "jao"
    Escaped command failed with exit code 2: psql nasuni < schema.sql
    None

----------------------------------------------------------------------

149. Field widths don't adapt well

M 0.11.12 jao@cheese ~/consulting/nasuni/analytics/load_simulation$ ls
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:28   .
drwxrwxr-x   jao    jao        4096   2020 Nov 19 13:49:27   .idea
-rw-rw-r--   jao    jao    4786675634   2020 Nov 19 13:50:33   1day.csv
-rw-rw-r--   jao    jao        1908   2020 Nov 19 13:49:27   main.py
-rw-rw-r--   jao    jao        2845   2020 Nov 19 12:40:01   notes.txt
-rw-rw-r--   jao    jao        2446   2020 Nov 19 12:52:23   schema.sql
drwxrwxr-x   jao    jao        4096   2020 Nov 19 11:27:25   venv

----------------------------------------------------------------------

159. sql query with string literal confuses the driver

    M 0.12.5 jao@cheese ~/git/marcel$ sql "select * from s where s like '%a%'"
    list index out of range

Is the problem the %?

----------------------------------------------------------------------

171. Running python doesn't work

jao@cheese:~$ marcel
M 0.13.6 jao@cheese ~$ python
M 0.13.6 jao@cheese ~$ 

----------------------------------------------------------------------

172. Args to bash are interpreted as belonging to marcel

M 0.13.6 jao@cheese ~$ bash ssh -l jao -i /home/jao/.ssh/id_rsa 127.0.0.1 'ls /tmp'
Operator bash: Flags must all appear before the first anonymous arg

----------------------------------------------------------------------

173. Creating config directories may need to create paths

E.g. .local/share might not be present.

----------------------------------------------------------------------

174. Error shouldn't result in stacks being printed

M 0.13.8 jao@cheese ~$ fork jao [host: ((host.cluster.name, host, host.cluster.user))]
Error: Running map(lambda: (host.cluster.name, host, host.cluster.user)): 'Cluster' object has no attribute 'name'
Caught <class 'marcel.exception.KillAndResumeException'>: 'Cluster' object has no attribute 'name'
  File "/home/jao/git/marcel/marcel/op/fork.py", line 219, in run_pipeline_in_child
    self.pipeline_wrapper.run_pipeline([self.thread_id])
  File "/home/jao/git/marcel/marcel/core.py", line 548, in run_pipeline
    marcel.core.Command(env, None, self.pipeline).execute()
  File "/home/jao/git/marcel/marcel/core.py", line 263, in execute
    self.pipeline.run()
  File "/home/jao/git/marcel/marcel/core.py", line 417, in run
    self.ops[0].run()
  File "/home/jao/git/marcel/marcel/op/map.py", line 67, in run
    self.send(self.call(self.function))
  File "/home/jao/git/marcel/marcel/core.py", line 100, in call
    self.fatal_error(args_description, str(e))
  File "/home/jao/git/marcel/marcel/core.py", line 151, in fatal_error
    raise marcel.exception.KillAndResumeException(message)
Process Process-10:
Traceback (most recent call last):
  File "/usr/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/usr/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/jao/git/marcel/marcel/job.py", line 147, in run_command_in_child
    child_namespace_changes = command.execute(self.env)
  File "/home/jao/git/marcel/marcel/core.py", line 263, in execute
    self.pipeline.run()
  File "/home/jao/git/marcel/marcel/core.py", line 417, in run
    self.ops[0].run()
  File "/home/jao/git/marcel/marcel/op/fork.py", line 167, in run
    worker.wait()
  File "/home/jao/git/marcel/marcel/op/fork.py", line 235, in wait
    x = dill.loads(input)
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 387, in loads
    return load(file, ignore, **kwds)
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 373, in load
    return Unpickler(file, ignore=ignore, **kwds).load()
  File "/usr/local/lib/python3.9/dist-packages/dill/_dill.py", line 646, in load
    obj = StockUnpickler.load(self)
TypeError: __init__() missing 1 required positional argument: 'error'
M 0.13.8 jao@cheese ~$ 

----------------------------------------------------------------------

175. Crash on upgrade

I just installed 0.13.8 on geophile.com and started marcel:

[ec2-user@ip-172-31-29-105 ~]$ marcel
Traceback (most recent call last):
  File "/usr/lib64/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib64/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/main.py", line 296, in <module>
    MAIN = Main(None, same_process=False, old_namespace=old_namespace)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/main.py", line 97, in __init__
    self.env = marcel.env.Environment.new(config_file, old_namespace)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/env.py", line 215, in new
    env.config_path = env.read_config(config_file)
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/env.py", line 330, in read_config
    config_path = self.locations.config_path()
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/locations.py", line 13, in config_path
    return self._dir('XDG_CONFIG_HOME', '.config') / 'startup.py'
  File "/home/ec2-user/.local/lib/python3.6/site-packages/marcel/locations.py", line 34, in _dir
    dir.mkdir(exist_ok=False)
  File "/usr/lib64/python3.6/pathlib.py", line 1248, in mkdir
    self._accessor.mkdir(self, mode)
  File "/usr/lib64/python3.6/pathlib.py", line 387, in wrapped
    return strfunc(str(pathobj), *args)
FileNotFoundError: [Errno 2] No such file or directory: '/home/ec2-user/.config/marcel'
[ec2-user@ip-172-31-29-105 ~]$ 

----------------------------------------------------------------------

176. Remote error not showing up correctly

From test_api:

    # TODO: Bug - should be expected_err
    TEST.run(lambda: run(fork('jao', ls('/nosuchfile'))),
             expected_out=[Error('No qualifying paths')])
             # expected_err='No qualifying paths')

----------------------------------------------------------------------

177. Tab completion for filename doesn't add quotes or otherwise escape filenames

----------------------------------------------------------------------

178. Cannot start without internet

No internet, started marcel:

jao@cheese:~$ marcel
Cannot start marcel: Cannot understand geophile.com as a host name or as an IP address.

Should complain when the cluster is actually used.

----------------------------------------------------------------------

179. Fix references to ~/.marcel.py in help

----------------------------------------------------------------------

180. bash command doesn't work in marcel

M 0.13.9 jao@cheese /tmp$ touch source/{a,b,c}
[bash(args=['touch', 'source/{a'])] followed by excess tokens: Comma(,), String(b), Comma(,), String(c})

----------------------------------------------------------------------

181. help cluster is missing

Referenced in "help upload".

----------------------------------------------------------------------

183. Remote execution failing

    M 0.13.10 jao@cheese ~$ @all [ gen 3 ]
    (localhost, 0)
    (localhost, 1)
    (localhost, 2)
    Traceback (most recent call last):
      File "/usr/local/bin/farcel.py", line 219, in <module>
        main()
      File "/usr/local/bin/farcel.py", line 205, in main
        signal_id = input.load()
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 646, in load
        obj = StockUnpickler.load(self)
    _pickle.UnpicklingError: unpickling stack underflow

On remote (acme), farcel.log says:

    10727 MainThread: Caught <class 'TypeError'>: code() takes at most 16 arguments 
    (19 given)
    Caught <class 'TypeError'>: code() takes at most 16 arguments (19 given)
      File "/usr/local/bin/farcel.py", line 186, in main
        env = input.load()
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 646, in load
        obj = StockUnpickler.load(self)
      File "/usr/local/lib/python3.9/site-packages/dill/_dill.py", line 805, in _cre
    ate_code
        return CodeType(args[0], 0, 0, *args[1:])
    10727 MainThread: Exiting

----------------------------------------------------------------------

186. Embedded expr not evaluated in API

E.g. in test_ls:

    TEST.env.setvar('TEST', 'test')
    TEST.run(test=lambda: run(ls('/tmp/(TEST)', recursive=True) | map(lambda f: f.render_compact())),
             expected_out=sorted(['.',
                                  'f', 'sf', 'lf', 'sd', 'd',  # Top-level
                                  'd/df', 'd/sdf', 'd/ldf', 'd/dd', 'd/sdd',  # Contents of d
                                  'sd/df', 'sd/sdf', 'sd/ldf', 'sd/dd', 'sd/sdd',  # Also reachable via sd
                                  'd/dd/ddf', 'd/sdd/ddf', 'sd/dd/ddf', 'sd/sdd/ddf'  # All paths to ddf
                                  ]))

'/tmp/(TEST)' gets parsed properly in interactive usage. In API, the
command line isn't parsed, so the expression isn't parsed, and the
variable is not expanded. SHOULD IT BE? 

Need to decide if env vars are in an Env object, or whether they are
simply program variables. If it's the latter, then a correct
formulation is

    ls(f'/tmp/{TEST}', ...

[After thinking about it for a while]

Program variables and environment variables are different. Using
f'/tmp/{TEST}' is a reasonable approximation of '/tmp/(TEST)', but
isn't a substitute. Program variables are part of Python, and not
available on the marcel command line. Environment variables are part
of marcel, and should be available through marcel.api.

----------------------------------------------------------------------

188. Marcel crashes on first startup if config directories are missing

~/.config and ~/.local/share are assumed. geophile.com didn't have
them, and in face, does not have XDG vars set. Makes sense for a
server, I guess. What is the Linuxy thing to do in this case?

----------------------------------------------------------------------

189. Auto-complete doesn't handle whitespace correctly

Should quote or insert escapes.

Problems:

1.

        touch "xxxx yyyy"
        ls "xxx
        
    autocompletes to:

        ls "xxxx yyyy "

    -> extra space at end. This is correct WITHOUT the 2nd quote,
       since we've unambiguously completed an actual filename. I.e.,
       the space should be after the quote.

2. 

        ls xxx

    autocompletes to

        ls xxxx yyyy

    -> Needs escape or quotes

----------------------------------------------------------------------

191. Protect env from deletion

Don't allow deletion of some symbols. Which ones? COLOR_SCHEME is one example.

----------------------------------------------------------------------

192. Native command output loses ANSI escape codes

Example:

M 0.14.1 jao@cheese ~/git/marcel/test$ git branch
  bug189
* bug190
  master
M 0.14.1 jao@cheese ~/git/marcel/test$ bash
jao@cheese:~/git/marcel/test$ git branch
  bug189
* bug190
  master

bash command output is colorized, marcel command output is not.

----------------------------------------------------------------------

194. {...} not handled consistently (from a bash point of view)

{} are not glob characters, they are bash characters. So

    grep asdf a{1,2}*

works, since this is evaluated by bash.

But 

    ls a{1,2}*

does not work, because ls is a marcel op, and marcel doesn't support
{}.

----------------------------------------------------------------------

196. Parsing after pipeline var is broken

    M 0.15.0 jao@cheese ~/git/marcel/test$ g = (| gen 3 |)
    M 0.15.0 jao@cheese ~/git/marcel/test$ g 3
    0
    1
    2

"g 3" is a parse error

But this works:

    M 0.15.0 jao@cheese ~/git/marcel/test$ gn = (| n: gen (int(n)) |)
    M 0.15.0 jao@cheese ~/git/marcel/test$ gn 3
    0
    1
    2
    M 0.15.0 jao@cheese ~/git/marcel/test$ gn 3 4
    Provided 2 arguments, but there are only 1 pipeline parameters

Is the fix to have pipeline, even without args, check arg count?

----------------------------------------------------------------------

197. runpipeline, used as an op, crashes marcel

It isn't a public op, but if you try calling it marcel crashes.

    M 0.15.0 jao@cheese ~/git/marcel/test$ runpipeline
    Traceback (most recent call last):
      File "/usr/lib/python3.10/runpy.py", line 196, in _run_module_as_main
        return _run_code(code, main_globals, None,
      File "/usr/lib/python3.10/runpy.py", line 86, in _run_code
        exec(code, run_globals)
      File "/home/jao/git/marcel/marcel/main.py", line 316, in <module>
        main()
      File "/home/jao/git/marcel/marcel/main.py", line 303, in main
        MAIN.run()
      File "/home/jao/git/marcel/marcel/main.py", line 133, in run
        self.run_command(self.input)
      File "/home/jao/git/marcel/marcel/main.py", line 145, in run_command
        pipeline = parser.parse()
      File "/home/jao/git/marcel/marcel/parser.py", line 919, in parse
        return self.command()
      File "/home/jao/git/marcel/marcel/parser.py", line 927, in command
        command = self.pipeline(None)
      File "/home/jao/git/marcel/marcel/parser.py", line 1040, in pipeline
        pipeline.append(self.create_op(*op_args))
      File "/home/jao/git/marcel/marcel/parser.py", line 1162, in create_op
        op = self.create_op_builtin(op_token, arg_tokens)
      File "/home/jao/git/marcel/marcel/parser.py", line 1191, in create_op_builtin
        self.tab_completion_context.set_op(op, op_module.args_parser().flags())
      File "/home/jao/git/marcel/marcel/opmodule.py", line 74, in args_parser
        assert self._args_parser_constructor is not None
    AssertionError
    jao@cheese:~/git/marcel/test$ 

----------------------------------------------------------------------

198. Crash when trying to create a file in place of an exiting directory

/media/backup/daily $ find /media/backup/daily/2023.03.09 -links 1 | args (| f: ls (f) | (f: (f.size, f)) |) > /tmp/x
Process Process-1:
Traceback (most recent call last):
  File "/usr/lib/python3.10/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.10/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.10/dist-packages/marcel/job.py", line 147, in run_command_in_child
    child_namespace_changes = command.execute(self.env)
  File "/usr/local/lib/python3.10/dist-packages/marcel/core.py", line 263, in execute
    self.pipeline.setup()
  File "/usr/local/lib/python3.10/dist-packages/marcel/core.py", line 410, in setup
    op.setup()
  File "/usr/local/lib/python3.10/dist-packages/marcel/op/write.py", line 144, in setup
    DefaultWriter(self))
  File "/usr/local/lib/python3.10/dist-packages/marcel/op/write.py", line 240, in __init__
    super().__init__(op)
  File "/usr/local/lib/python3.10/dist-packages/marcel/op/write.py", line 196, in __init__
    self.output = open(path, mode='a' if op.append else 'w')
IsADirectoryError: [Errno 21] Is a directory: '/tmp/x'
